---
title: "Board Games and Individual Ratings"
author: "Crystal Zhang, Lauren Grove, Nate Ren"
date: "5-1-24"
format: pdf
---

# Set Up

```{r import}

pacman::p_load(tidyverse, stringr, ggplot2, viridis, knitr)

```

# Import Data set

We are using the board games data from tidytuesday in 2019. The data comes from the Board Games Geek database which allows users to rates board games. The data spans from 1950 to 2016 with games that have at least 50 ratings.

```{r}

board_games_data_raw <- read.csv("./board_games.csv")

head(board_games_data_raw)

```

# Data Exploration

First we need to have an overview of the data set as a basis of further analysis.

## Data Structure

```{r}

str(board_games_data_raw)

```

There are a total of 10523 observations, each representing a different board game. The dataset consists of 22 variables, which includes the types integer, string, and numerical. The integer variables are:game_id, max_players, max_playtime, min_age, min_players, min_playtime, playing_time, year_published, and users_rated. The character variables are: description, image, name, thumbnail, artist, category, compilation,â€˜designer, expansion, family, mechanic, and publisher. The only numerical variable is average_rating. More information on variables can be seen in the Variable List

## Data Summary

```{r}

summary(board_games_data_raw)

```

This is a basic summary of the data set. The distribution of integer and numerical variables, such as max_playtime and min_players are demonstrated with the 5-number summary and the mean. For character variables, only length (which is the same as the number of observations), class, and mode (both of these show the data type) are present.

Although it is an numerical variable, `game_id` does not provide any relevant statistical information, as it is only used for identifying a game.

According to this summary, values for `max_players` tend to be under 10 with a median of 4 and a mean of 5.657, which are realistic numbers for a game, and an outlying max of 999.

Meanwhile `max_playtime` have a median of 45, a mean of 91.34, and and on outlier max of 60000 (the possible reason why the mean is so much higher than the median).

For `min_age`, the median is 10 and the mean is 9.715. Curiously, the max is 42, which could be a potential error.

`min_players` have a median of 2, a mean of 2.071, and a max of 9.

`min_playtime` have a median of 45 and a mean of 80.88. It also has a max of 60000, which again is likely an error as it is not a realistic minimum playtime.

`playing_time` have a median of 45, a mean of 91.34, and a max of 60000.

`year_plushed` have a median of 2007, a mean of 2003, and a max of 2016. This means that the most recent game in the data set is published in 2016.

`average_rating` have a median of 6.393 and a mean of 6.371.

`users_rated` have a median of 176 and a mean of 870. It also has asignificantly large max of 67655.

# Data Dictionary

This is the data dictionary for this data set

## Variable List

-   game_id = unique board game ID Number

    -   Data Type = Integer

-   description = short description of the game

    -   Data Type = String

-   max_players = the largest amount of players that can play the board game at a certain time

    -   Data Type - Integer

-   max_playtime = the longest estimated amount of time that it will take for people to finish playing the game. This is written in minutes

    -   Data Type = Integer

-   min_age = the minimum age a person needs to be in order to play the board game

    -   Data Type = Integer

-   min_players = the minimum amount of people that can play the board game at a certain time

    -   Data Type = Integer

-   min_playtime = the shortest estimated amount of time that it will take for people to finish playing the game. This is written in minutes.

    -   Data Type = Integer

-   name = the name of the board game

    -   Data Type = String

-   playing_time = the estimated average amount of time that it will take for people to finish playing the game. This is written in minutes

    -   Data Type = Integer

-   year_published = the year that the game was published

    -   Data Type = Integer

-   category = this is a string that says what categories each board game belongs to. If a board game has multiple categories all of them will be written down and will be separated by commas

    -   Data Type = String

-   compilation = if the game is part of a multi-game compilation is lists what compilation it is apart of

    -   Data Type = String

-   designer = this is the name of the person or people that designed the game. If there are multiple people that designed a game their names are split by commas in between each name

    -   Data Type = String

-   expansion = if the game has an expansion pack this variable has the name of the expansion pack. If the game has multiple expansion packs each expansion pack is split by commas.

    -   Data Type = String

-   mechanic = this explains how the game is played and what the game uses to work. If a game uses multiple elements to run the elements are split by commas

    -   Data Type = String

-   publisher = this is the company or people that published the game. If a game has multiple publishers then the publishers are split by commas

    -   Data Type = String

-   average_rating = this is the average rating of the game on Board Game Geek. The rating system runs on a scale from 1 to 10

    -   Data Type = Double

-   users_rated = This is the number of user that rated the game on Board Game Geek.

    -   Data Type = Integer

# Research Questions

The research questions we intend to answer are **for each decade what primary game category had the highest user rating** and **between `average_playtime`, number of users rated, and max player which has the greatest correlation with average rating**. To answer the first question, we will assume that the first category listed in `category` is the primary game category. We will create a new variable called `primary_category` that stores the split category column. We use `lubridate` change `year_published` into datetime object with a default date being placed. Then we plan to group all the decades together to find the average rating for each category in each decade. Then make 7 bar charts for each decade that exists to see which games have the best rating. 

# Cleaning Methods

To answer the questions of our research, we need to perform the following cleaning tasks:

1.  Remove `image` and `thumbnail` columns using `select()`

2.  Recode `compilation` and `expansion` values to yes or no

3.  Recode `max_players` of `999` to `NA`

4.  Identify how many `NA` values are in each column

5.  Split `category` data by commas to get primary category by/using str_split

6.  Change `primary_category` variable from character to a factor

7.  Use `lubridate` to change `year` variable to a date

# Data Cleaning

```{r}
# Remove `image` and `thumbnail` columns
board_games <- board_games_data_raw |> 
  select(-c("image", "thumbnail"))

# Recode `compilation` and `expansion` values to yes or no
for (i in 1:length(board_games$compilation)) {
  if (is.na(board_games$compilation[i])){
    board_games$compilation[i] <- "no"}
  else {
board_games$compilation[i] <- "yes"}
}
for (i in 1:length(board_games$expansion)) {
  if (is.na(board_games$expansion[i])){
    board_games$expansion[i] <- "no"}
  else {
    board_games$expansion[i] <- "yes" }
}

# Replace `max_players` values of `999` with `NA`
board_games <- board_games |> 
  mutate(max_players = replace(max_players, max_players == 999, NA))

# Identify how many `NA` values are in each column 
ShowNA <- map_df(board_games, ~ tibble(columns = names(.), na_count = sum(is.na(.))), .id = "variables/column name")
kable(ShowNA)

# Make a new column called decade_published to store date time objects to be transformed into decade
board_games$decade_published = c(as.Date(as.character(board_games_data_raw$year_published), format = "%Y"))

# Make a new category to hold the primary category
board_games$primary_category = c(board_games$category)

# Under assumption that first category listed is the primary category
board_games <- board_games%>%
  mutate(primary_category = str_split(category, ",") %>% 
           #use split to make a list for each column of all the categories
           map_chr(~ trimws(.x[1])))
          # iterate over each element of the list column (.x) and extract the first element ([1])
          #trimws is used to remove any white space
# Turn primary_characor column into a factor
primary_charactor_factor <- as.factor(board_games$primary_category)
print(unique(primary_charactor_factor))
```

# Data Visualization

## Research Question 1

**for each decade what primary game category had the highest user rating**

```{r fig.height = 10}
# Function to extract decade from a date
get_decade <- function(date) {
  year <- as.integer(format(date, "%Y"))
  decade_start <- year - (year %% 10)
  return(as.character(decade_start))
}

# Apply the function to create a 'decade' column directly in board_games
board_games$decade_published <- as.Date(board_games$decade_published)
board_games$decade <- get_decade(board_games$decade_published)

# Summarize ratings by decade_published and primary_category
ratings_by_category <- board_games %>%
  group_by(decade, primary_category) %>%
  summarise(avg_category_rating = mean(average_rating, na.rm = TRUE), .groups = "drop") %>%
  arrange(decade, desc(avg_category_rating))

# Generate unique colors for each primary_category
num_categories <- n_distinct(ratings_by_category$primary_category)
custom_palette <- rainbow(num_categories)

# Loop through unique decades and create plots
unique_decades <- unique(ratings_by_category$decade)
for (decade in unique_decades) {
  # Filter ratings data by the current decade
  decade_ratings <- ratings_by_category[ratings_by_category$decade == decade, ]
  
  # Reorder primary_category based on avg_category_rating within the current decade
  decade_ratings <- decade_ratings %>%
    mutate(primary_category = factor(primary_category, levels = unique(primary_category[order(-avg_category_rating)])))  
  # Using mutate to reorder categories
  
  # Create the plot using the selected color palette
  p <- ggplot(decade_ratings, aes(x = primary_category, y = avg_category_rating, fill = primary_category)) +
    geom_bar(stat = "identity", color = "black", position = position_dodge(width = 0.9)) +
    labs(title = sprintf("Average Category Rating by Decade: %s", decade),
         x = "Primary Category", y = "Average Category Rating") +
    theme_minimal() +
    coord_flip() +
    scale_fill_manual(values = custom_palette, guide = "none")  # Suppress legend

  # Print the plot
  print(p)
}

```
From the bar graphs, we can see that there has been a significant increase in the types of games throughout the decades. Or at least the specificity of which we label the primary category of board games has increased. In the 1950s there were 21 primary game categories and in the 2010s there were 80 different primary game categories according to our `board_games` dataset. 
In the 1950s the primary category with the highest average rating was `Sports`. In the 1960's it was `Nautical`. In the 1970s it was `Vietnam War`. In the 1980s it was `Game System`. In the 1990s it was `Renaissance`. In the 2000s it was `Medical`. Lastly, in the 2010s the primary category with the highest average rating was `American Indian Wars`. Each decade has a category of `NA` which tells us the average rating of the games that did not have a category given to them.




## Research Question 2

For the second research questions we plan to make three graphs that compares each variable with `average_rating` to see which has the greatest correlation with `average_rating`.
The first step is to find the upper and lower outliers for `playing_time`, `users_rate`, and `max_players` using the 1st quartile, the 3rd quartile, and the IQR provided by the `summary()` function. This is to ensure that the outliers are filtered prior to the plot construction so they would not distort the graph and make correlation *appear* weaker because of their extreme values. 
Each plot will also include a line of best fit which would demonstrate a more explicit and accurate correlation between the two variables. 

# The First Scatterplot, `playing_time` vs `average_rating`
```{r}
#First, identify outliers that may distort the graph. This will apply to all other visualizations for this question. 
outlierhighplaytime <- 90+1.5*(90-30) #Upper boundary for outlier = Q3 + 1.5IQR
outlierlowplaytime <- 30-1.5*(90-30)  #Lower boundary for outlier = Q1 - 1.5IQR
#All information about Q3, Q1, and IQR are obtained for `summary(Boardgame)`.
board_games |> 
  select(playing_time, average_rating) |> 
 filter(playing_time > outlierlowplaytime, playing_time < outlierhighplaytime) |>
ggplot(aes(x = average_rating, y = playing_time)) +  
geom_point(color = "blue") +
    geom_smooth(method = "gam", se = TRUE) +  # Add line of best fit
labs (title = "Play Time and Average Rating", 
      x = "Average Rating", 
      y = "Play Time")
```

#The Second Scatterplot, `users_rated` vs `average_rating`
```{r}
outlierhighuser <- 518+1.5*(518-85)
outlierlowuser <- 85-1.5*(518-85)
board_games%>%
  select(average_rating, users_rated) |> 
filter (users_rated > outlierlowuser, users_rated < outlierhighuser) |> 
ggplot(aes(x = average_rating, y = users_rated)) + 
geom_point(color = "red") +
  geom_smooth(method = "gam", se = TRUE) +  # Add line of best fit
  labs (title = "Number of Users Rated and Average Rating",
      x = "Average Rating", 
      y = "Number of Users Rated")
```
#The Third Scatterplot, `max_players` vs `average_rating`
```{r}
outlierhighplayer <- 6 + 1.5*(6-4)
outlierlowplayer <- 4-1.5*(6-4)
board_games%>%
  select(average_rating, max_players) |> 
  filter(!is.na(max_players), max_players > outlierlowplayer, max_players < outlierhighplayer) |> 
ggplot(aes(x = average_rating, y = max_players)) + 
geom_point(color = "yellow") + 
  geom_smooth(method = "gam", se = TRUE) +  # Add line of best fit
 labs (title = "Maximum Number of Players and Average Rating", 
      x = "Average Rating", 
      y = "Maximum Players")
```
There is a slight positive correlation betweeen play time of games and its average rating. This means that overall, the longer the play time, the higher the average rating. However, there are many games with the same play time but has different ratings. 
There is no significant correlation between numbers of users rating the game and the game's average rating. However, the graph appears to be skewed to the left. 
The correlation between maximum number of players and average rating is very interest. Despite the line of best fit showing a negative correlation, all games visualized have a maximum player number that is an integer between 2 and 8. This makes sense as a game cannot have a fraction of a player. Games that have the same number of players have vastly different ratings though. The negative correlation seems to be caused by the fact that there are very few games with extremely low ratings. 
Based on these observations, it is concluded that play time have the greatest correlation with average rating, in that average rating increases with play time. 
However, it is important to remember that since correlation does not equal causation, having a longer play time would not necessarily make the average rating happen. But it there really is causation, this relationship may be explained by longer games having more and better qualitied playable content than shorter ones. 

# Conclusion

We found that overall after the 1960's that games that are part of the American Civil WAr are alwasy in the top five. In fact the board games that are rated highly since the 1960's seem to all either be war related games or be related to a cultural trend. One example is in the 1980's the second highest rated category is space exploration with fits with the trend of science fiction that was emerging due to the moon landing 5 years prior. In the 1970's the best rated games are those related to the Vietnam War this could be related to how during the early 70's many Americans were beginning to hate being apart of the Vietnam War and these board games could be anti-Vietnam war related which would have connect to Americans. Also since the war ends in 1975 it means that it is still part of the mainstream giving people all sorts of stories and lessons to make board games from. 
Also we found that the games with longer play times have the more correlation with the average rating of a game. This could be that since peope are playing the game long they are able to get a better experience with their friends and family leading to overall high ratings as when they think back they can think of many moments. Long board games also have the ability to be more complex as they have more time to implement more mechanics for people to experiment with. With more complexity it also leads to more replay ability as each time someone plays the game they can do it differently. Replay ability typically means that people can play it more times in one sitting without switching to another game. These are just some reason on why we think that there is a positive correlation between play time and average rating. 
The board game industry has expanded since the 1960's with 2010 having so many different categories of board games people are sure to find a game to suit them.

